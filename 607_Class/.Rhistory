#all columns with an "m" in them...
mtcars %>%
select(contains("m")) %>%
head()
#1
head(mtcars)
head(mtcars)
mtcars_logmpg <- mtcars %>%
mutate(logmpg=log(mpg))%>%
mutate(sqrthp=sqrt(hp))%>%
mtcars_logmpg <- mtcars %>%
mutate(logmpg=log(mpg))%>%
mutate(sqrthp=sqrt(hp))%>%
head(mtcars_logmpg)
mtcars_logmpg <- mtcars %>%
mutate(logmpg=log(mpg))%>%
mutate(sqrthp=sqrt(hp))%>%
mtcars_logmpg <- mtcars %>%
mutate(logmpg=log(mpg))%>%
mutate(sqrthp=sqrt(hp))%>%
head(mtcars_logmpg)
g
View(mtcars_logmpg)
mtcars_logmpg <- mtcars %>%
mutate(logmpg=log(mpg))%>%
mutate(sqrthp=sqrt(hp))
head(mtcars_logmpg)
#2
plot(hp~gear, data=mtcars)
mtcars %>%
filter(cyl =6) %>%
select(carb, disp) %>%
head()
mtcars %>%
filter(cyl=6) %>%
select(carb, disp) %>%
head()
mtcars %>%
filter(cyl=6) %>%
select(cyl, carb, disp) %>%
head()
#3
mtcars %>%
filter(cyl=6) %>%
select(cyl, carb, disp) %>%
head()
mtcars %>%
select(cyl, carb, disp) %>%
filter(cyl=6) %>%
head()
#3
mtcars %>%
select(cyl, carb, disp) %>%
head()
mtcars %>%
select(cyl, carb, disp) %>%
filter(cyl="6")
head()
#3
mtcars %>%
select(cyl, carb, disp) %>%
filter(cyl=6)
mtcars %>%
select(cyl, carb, disp) %>%
filter(cyl=6)%>%
head()
#3
mtcars %>%
select(cyl, carb, disp) %>%
filter(cyl==6)%>%
head()
mtcars_2 <- mtcars %>%
group_by(gear)%>%
summarize(avg_hp=mean(hp)
plot(hp~gear, data=mtcars_2)
plot(hp~gear, data=mtcars_)
plot(hp~gear, data=mtcars_2)
#2
mtcars_2 <- mtcars %>%
summarize(avg_hp=mean(hp)
#2
mtcars_2 <- mtcars %>%
group_by(gear)%>%
summarize(avg_hp=mean(hp))
#2
mtcars_2 <- mtcars %>%
group_by(gear)%>%
summarize(avg_hp=mean(hp))
plot(hp~gear, data=mtcars_2)
#2
mtcars_2 <- mtcars %>%
group_by(gear)%>%
summarize(avg_hp=mean(hp))
plot(hp~gear, data=mtcars_2)
plot(avg_hp~gear, data=mtcars_2)
#2
mtcars_hpgear <- mtcars %>%
group_by(gear)%>%
summarize(avg_hp=mean(hp))
plot(avg_hp~gear, data=mtcars_hpgear)
plot(log_mpg~sqrt_hp, data=mtcars)
plot(logmpg~sqrt_hp, data=mtcars)
mtcars_logmpg <- mtcars %>%
mutate(logmpg=log(mpg))%>%
mutate(sqrthp=sqrt(hp))%>%
head()
plot(logmpg~sqrt_hp, data=mtcars)
plot(logmpg~sqrt_hp, data=mtcars_logmpg)
plot(logmpg~sqrthp, data=mtcars_logmpg)
plot(logmpg~sqrthp, data=mtcars_logmpg)
#3
mtcars %>%
select(cyl, carb, disp) %>%
filter(cyl==6)%>%
head() %>%
boxplot(dips~carb, data=.)
#3
mtcars %>%
select(cyl, carb, disp) %>%
filter(cyl==6)%>%
head() %>%
boxplot(disp~carb, data=.)
replicate(n=10, sum(1:100))
#purrr:map_dbl
library(purrr)
map_dbl(1:10, ~sum(1:100)) #needs tilda for complex function
map_dbl(1:10, ~sum(1:.x)) #1:10 is split into 10 pieces, each called ".x
map_df(1:10, ~data.frame(x=.x
y=sum(1:.x)))  #map dataframe
map_df(1:10, ~data.frame(x=.x,
y=sum(1:.x)))  #map dataframe
replicate(1:10, n=7)
replicate(1:10, n=7)
replicate(n=7, mean(1:10))
map_dbl(1:7, ~mean(1:10))
my_vec <- c(11, 10, 10, 9, 10, 11, 10, 9, 10, 12, 9, 11, 8, 11, 11, 10, 11, 10, 11, 9)
map_df(3:15, ~my_vec (x=mean(.x),
y=sd(.x)))
my_vec <- c(11, 10, 10, 9, 10, 11, 10, 9, 10, 12, 9, 11, 8, 11, 11, 10, 11, 10, 11, 9)
map_df(3:15, ~my_vec(x=mean(.x),
y=sd(.x)))
map_df(3:15, ~data.frame(x=my_vec$mean(.x),
y=my_vec$sd(.x)))
map_df(3:15, ~data.frame(m = mean(my_vec[1:.x]),
s = sd (my_vec[1:.x])))
install.packages("palmerpenguins")
library(palmerpenguins)
#1b Head data set
head(palmerpenguins)
#------Question 1 ----------
#1a Load palmerpenguins data set
library(palmerpenguins)
data(palmerpenguins)
data(penguins)
#1b Head data set
head(penguins)
#1c What do you learn from str() and summary()?
str(penguins)
summary(penguins)
#1d What are quanitles for bill depth accross whole dataset? What do those mean?
quantiles(penguins$bill_depth_mm)
#1d What are quanitles for bill depth accross whole dataset? What do those mean?
quantile(penguins$bill_depth_mm)
#1d What are quanitles for bill depth accross whole dataset? What do those mean?
quantile(penguins$bill_depth_mm, na.rm=TRUE)
#------Question 2 ----------
my_vec <- c(1,4,7,NA,9)
#2a What is mean of the below vec? NA will cause a problem, use ?mean to solve.
my_vec <- c(1,4,7,NA,9)
mean(my_vec)
?mean
mean(my_vec, na.rm = TRUE)
mean(penguins$body_mass_g, na.rm=TRUE)
median(penguins$body_mass_g)
median(penguins$body_mass_g, na.rm=TRUE)
sd(penguins$body_mass_g, na.rm=TRUE)
?sd
#2c. Repeat 2b, but, show us how these quantities differ by species
mean(penguins$body_mass_g, na.rm=TRUE) %>%
group_by(species)
library(dplyr)
library(magrittr)
mean(penguins$body_mass_g, na.rm=TRUE)%>%
group_by(species)
mean(penguins$body_mass_g, na.rm=TRUE)%>%
group_by(penguins$species)
penguin_mass <- penguins %>%
mean(penguins$body_mass_g, na.rm=TRUE) %>%
group_by(penguins$species)
penguin_mass <- penguins %>%
mean(body_mass_g, na.rm=TRUE) %>%
group_by(species)
penguins$body_mass_g %>%
mean() %>%
group_by(species)
penguins_mass <- penguins %>%
mean() %>%
group_by(species)
penguins_mass <- penguins %>%
mean(na.rm=TRUE) %>%
group_by(species)
penguins_mass <- penguins %>%
mean(na.rm=TRUE) %>%
group_by(species)
penguins_mass <- penguins$body_mass_g %>%
mean(na.rm=TRUE) %>%
group_by(species)
penguins_mass <- penguins$body_mass_g %>%
mean(na.rm=TRUE) %>%
group_by(penguins$species)
penguins %>%
group_by(species)
penguins %>%
group_by(species) %>%
summarize(avg_mass=mean(body_mass_g, na.rm=TRUE))
penguins %>%
group_by(species) %>%
summarize(sd_mass_species=sd(body_mass_g, na.rm=TRUE))
penguins %>%
group_by(species) %>%
summarize(med_mass_species=median(body_mass_g, na.rm=TRUE))
penguins %>%
filter(island==Biscoe) %>%
group_by(species) %>%
summarize(avg_mass_species=mean(body_mass_g, na.rm=TRUE))
?penguins
penguins %>%
filter(island==Biscoe) %>%
group_by(species) %>%
summarize(avg_mass_species=mean(body_mass_g, na.rm=TRUE))
penguins %>%
filter(island=="Biscoe") %>%
group_by(species) %>%
summarize(avg_mass_species=mean(body_mass_g, na.rm=TRUE))
paste("Hello", "Goodbye", sep = "! ")
paste("Hello", "Goodbye", sep =!)
paste("Hello", "Goodbye", sep ="!")
penguins %>%
mutate(paste(species, island, sep="!"))
penguins %>%
mutate(species_island <- paste(species, island, sep="!"))
penguins %>%
mutate(species_island=paste(species, island, sep="!"))
paste("Hello", "Goodbye", sep ="_")
penguins %>%
mutate(species_island=paste(species, island, sep="_"))
penguins %>%
filter(island=="Biscoe") %>%
group_by(species) %>%
summarize(med_mass_species=median(body_mass_g, na.rm=TRUE))
#3a. Show the distribution of flipper_length_mm by species and island using boxplots.
boxplot(penguins$flipper_length_mm)
penguins$flipper_length_mm %>%
group_by(species) %>%
penguins$flipper_length_mm %>%
group_by(species) %>%
penguins$flipper_length_mm %>%
group_by(species) %>%
boxplot()
flipper_length_mm %>%
group_by(species) %>%
boxplot()
penguins$flipper_length_mm %>%
group_by(species) %>%
boxplot()
Penguin flippers <- penguins$flipper_length_mm %>%
group_by(species) %>%
boxplot()
Penguin flippers <- penguins %>%
group_by(species) %>%
boxplot()
penguins %>%
group_by(species) %>%
boxplot()
penguins %>%
select(flipper_length_mm)%>%
group_by(species) %>%
boxplot()
penguins %>%
group_by(species) %>%
select(flipper_length_mm)%>%
boxplot()
penguins %>%
group_by(species) %>%
summarise(flipper_length_mm)%>%
boxplot()
penguins %>%
group_by(species) %>%
summarise(flipper_length <- flipper_length_mm)%>%
boxplot()
penguins %>%
mutate(species_island=paste(species, island, sep="\n"))
penguins %>%
mutate(species_island=paste(species, island, sep=\n))
penguins %>%
mutate(species_island=paste(species, island, sep="\n"))
penguins %>%
mutate(species_island=paste(species, island, sep="\n"))
View(penguins)
new_penguins <-penguins %>%
mutate(species_island=paste(species, island, sep="\n"))
View(new_penguins)
penguins %>%
selet(flipper_length_mm)
group_by(species) %>%
boxplot()
boxplot(penguins$flipper_length_mm~species)
boxplot(flipper_length_mm~species, data=penguins)
boxplot(flipper_length_mm~species_island, data=penguins)
penguins %>%
mutate(species_island=paste(species, island, sep="_"))
boxplot(flipper_length_mm~species_island, data=penguins)
new_penguins <- penguins %>%
mutate(species_island=paste(species, island, sep="_"))
new_penguins <- penguins %>%
mutate(species_island=paste(species, island, sep="_"))
boxplot(flipper_length_mm~species_island, data=new_penguins)
boxplot(flipper_length_mm~island, data=new_penguins) #just by island
boxplot(flipper_length_mm~species, data=new_penguins) #just by species
boxplot(flipper_length_mm~species_island, data=new_penguins) #by species_island
boxplot(flipper_length_mm~body_mass_g, data=new_penguins) %>%
group_by(species)
plot(flipper_length_mm~body_mass_g, data=new_penguins) %>%
group_by(species)
plot(flipper_length_mm~body_mass_g, data=new_penguins) %>%
group_by(species)
#Random numver generation ####
rnorm(n=5, mean=3, sd=2)
hist(rnorm(1000, mean =3, sd=2))
rnorm(1000, mean=3, sd=2) %>%
hist()
#libraries for this code
library(dplyr)
library(purrr)
hist(rnorm(1000, mean =3, sd=2))
rnorm(1000, mean=3, sd=2) %>%
density() %>%
plot()
rnorm(5, mean=5, sd=2)
rnorm(n=5, mean=5, sd=2)
set.seed(607)
rnorm(n=5, mean=5, sd=2)
#simulate flipping coin- binomial
#how many heads do we get if we flip an unbiased coin 10 times
rbinom(n=1, prob=0.5, size = 10) #one flip
#repeat the 10 flips 100 times (100 trials)
rbinom(100, prob=0.5, size = 10) #one flip
# equal probability of any number in a range
runif(50, min=-5, max=5)
#random whole numbers
runif(50, min=-5, max=5) %>%
round()
samp_sim <- data.frame(samp_size=3:50)
sd_pop <- 15 #most fish you see fall between 30 and 60 inches
#our assumptions
mean_pop <- 45 #45 inches seems like about average fish size
samp_sim <- data.frame(samp_size=3:50)
#NOW we need to do some simulations
#if we just wanted random draws...
samp_sim_one_replicate <- samp_sim %>%
rowwise(samp_size) %>% #group by row number
summarize(samp=rnorm(samp_size, mean=mean_pop, sd=sd_pop))
head(samp_sim_one_replicate)
plot(samp_sim_one_replicate)
#this is great, but we want to estimate the mean at each sample size some huge number of times - 1000
samp_sim_means <- samp_sim %>%
rowwise(samp_size) %>% #group by row number
summarize(samp= replicate(1000,
rnorm(samp_size, mean=mean_pop, sd=sd_pop) %>%
mean()))
head(samp_sim_means)
plot(samp_sim_means)
plot(samp~samp_size, data= samp_sim_one_replicate)
plot(samp_mean~samp_size, data=samp_sim_means)
plot(samp_means~samp_size, data=samp_sim_means)
#this is great, but we want to estimate the mean at each sample size some huge number of times - 1000
samp_sim_means <- samp_sim %>%
rowwise(samp_size) %>% #group by row number
summarize(samp_mean= replicate(1000,
rnorm(samp_size, mean=mean_pop, sd=sd_pop) %>%
mean()))
plot(samp_mean~samp_size, data=samp_sim_means)
mean(rnorm(samp_size, mean_pop, sd_pop)))
head(sim_results)
sim_results <- data.frame(samp_size=3:30) %>%
#for each samp size (set of params)...
rowwise(samp_size) %>%
#replicate calculating estimates params from a random draw for some number of times
summarize(samp_mean=replicate(100,
mean(rnorm(samp_size, mean_pop, sd_pop)))
samp_sd= replicate (100,
mean(rnorm(samp_size, mean_pop, sd_pop)))
head(sim_results)
sim_results <- data.frame(samp_size=3:30) %>%
#for each samp size (set of params)...
rowwise(samp_size) %>%
#replicate calculating estimates params from a random draw for some number of times
summarize(samp_mean=replicate(100,
mean(rnorm(samp_size, mean_pop, sd_pop)))
samp_sd= replicate (100,
mean(rnorm(samp_size, mean_pop, sd_pop)))
head(sim_results)
#step 2
sim_results <- data.frame(samp_size=3:30) %>%
#for each samp size (set of params)...
rowwise(samp_size) %>%
head(sim_results)
#step 2
sim_results <- data.frame(samp_size=3:30) %>%
#for each samp size (set of params)...
rowwise(samp_size) %>%
#replicate calculating estimates params from a random draw for some number of times
summarize(samp_mean=replicate(100,
mean(rnorm(samp_size, mean_pop, sd_pop))),
samp_sd= replicate (100,
mean(rnorm(samp_size, mean_pop, sd_pop))))
head(sim_results)
# I replicated 100 simulations twice. Annoying!
# What if I only did it once, and made a DF for each sim
# Create a data frame with a variety of plausible sample sizes/properties
sim_results <- data.frame(samp_size = 3:30) %>%
# For each sample size (set of params)...
rowwise(samp_size) %>%
# Replicate calculating estimated parameters
# from a random draw
# some # of times
summarize(map_df(1:100,
~data.frame(sim = .x,
samp_mean =  mean(rnorm(samp_size, mean_pop,sd_pop)),
samp_sd =  sd(rnorm(samp_size, mean_pop,sd_pop)))))
sim_results
head(sim_results )
sim_results
sim_results
set.seed(42)
mean_pop <- 10
sd_pop <- 3
nsim <- 100
sampSim <- data.frame(samp_size = 3:50)
#Some preperatory material
set.seed(42)
mean_pop <- 10
sd_pop <- 3
nsim <- 100
sampSim <- data.frame(samp_size = 3:50)
sampSim %>%
rowise(samp_size) %>%
summarize(samp_mean =
replicate(nsim,
rnorm(samp_size, mean_pop, sd_pop) %>% mean()))
sampSim
sampSim %>%
rowwise(samp_size) %>%
summarize(samp_mean =
replicate(nsim,
rnorm(samp_size, mean_pop, sd_pop) %>% mean()))
sampSim
#libraries for this code
library(dplyr)
library(dplyr)
library(dplyr)
sim_results <- sampSim %>%
rowwise(samp_size) %>%
summarize(samp_mean = replicate(nsim,
mean(rnorm(samp_size, mean_pop,sd_pop))),
samp_sd = replicate(nsim, sd(rnorm(samp_size, mean_pop,sd_pop))))
plot(samp_mean ~ samp_size, data = sim_results)
#faded example 2. simulate median
sampSim %>%
rowwise(samp_size) %>%
summarize(samp_median = replicate(nsim,
rnorm(samp_size, mean_pop,sd_pop) %>% median.default()))
sampSim
#faded example 2. simulate median
sampSim2 %>%
rowwise(samp_size) %>%
summarize(samp_median = replicate(nsim,
rnorm(samp_size, mean_pop,sd_pop) %>% median.default()))
#faded example 2. simulate median
sampSim2 %>%
rowwise(samp_size) %>%
summarize(samp_median = replicate(nsim,
rnorm(samp_size, mean_pop,sd_pop) %>% median.default()))
sampSim2 %>%
rowwise(samp_size) %>%
summarize(samp_median = replicate(nsim,
rnorm(samp_size, mean_pop,sd_pop) %>% median.default()))
sampSim2
#faded example 2. simulate median
samp_sim %>%
rowwise(samp_size) %>%
summarize(samp_median = replicate(nsim,
rnorm(samp_size, mean_pop,sd_pop) %>% median.default()))
samp_sim
#faded example 3. iqr
samp_sim %>%
rowwise(samp_size) %>%
summarize(samp_iqr =
replicate(nsim,
rnorm(samp_size, mean_pop,sd_pop) %>% IQR()))
samp_sim
#faded example 3. iqr
samp_sim %>%
rowwise(samp_size) %>%
summarize(samp_iqr =
replicate(nsim,
rnorm(samp_size, mean_pop,sd_pop) %>% IQR()))
#faded example 2. simulate median
samp_sim %>%
rowwise(samp_size) %>%
summarize(samp_median = replicate(nsim,
rnorm(samp_size, mean_pop,sd_pop) %>% median()))
